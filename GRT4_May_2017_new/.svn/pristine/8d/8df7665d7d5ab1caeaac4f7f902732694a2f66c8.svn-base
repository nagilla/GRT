package com.avaya.grt.dao.technicalonboarding;

import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.avaya.grt.mappers.ArtErrorCode;
import com.avaya.grt.mappers.CompatibilityMatrix;
import com.avaya.grt.mappers.ExpandedSolutionElement;
import com.avaya.grt.mappers.HardwareServer;
import com.avaya.grt.mappers.LocalTRConfig;
import com.avaya.grt.mappers.PipelineSapTransactions;
import com.avaya.grt.mappers.ProductRelease;
import com.avaya.grt.mappers.SiteList;
import com.avaya.grt.mappers.SiteRegistration;
import com.avaya.grt.mappers.TechnicalOrder;
import com.avaya.grt.mappers.TechnicalRegistration;
import com.grt.dto.AUXMCMain;
import com.grt.dto.CMMain;
import com.grt.dto.Product;
import com.grt.dto.SALGateway;
import com.grt.dto.TRConfig;
import com.grt.util.DataAccessException;
import com.grt.util.ProcessStepEnum;
import com.grt.util.SearchParam;
import com.grt.util.StatusEnum;

public interface TechnicalOnBoardingDao {
	
	public int getTechnicalRegistrationSummaryListCount(String registrationId, String registrationType, List<SearchParam> searchParams);
	 public SiteRegistration getSiteRegistration(String registrationId) throws DataAccessException;
	 public List<TechnicalOrder> getTechnicalRegistrationSummaryList(String registrationId, String[] registrationType);
	 public Collection<Product> getTechnicallyRegisterableRecordsNew(String soldToNumber) throws DataAccessException;
	 public List<PipelineSapTransactions> getPipelineTechnicallyRegisterableRecords(String soldToId) throws DataAccessException;
	 public Map<String,String> getMaterialCodeDesc(List<String> materialCodes) throws DataAccessException;
	 public List<TechnicalOrder> saveTechnicalOrderList(List<TechnicalOrder> technicalOrderList) throws DataAccessException;
	 public List<Product> getTechnicallyRegisteredRecords(String soldToNumber) throws DataAccessException;
	 public SiteRegistration updateSiteRegistrationProcessStepAndStatus(String registrationId, ProcessStepEnum step, StatusEnum status) throws DataAccessException;
	 public SiteRegistration changeOwnership(SiteRegistration siteRegistration) throws DataAccessException;
	 public Map<String, Set<String>> initializeTRConfigData();
	 public Map<String, List<TRConfig>> fetchTRConfigs() throws DataAccessException;
	 public Set<String> getEligibleAccessTypes(List<TRConfig> trConfigs, Map<String, CompatibilityMatrix> salCompatibilityMatrix)  throws DataAccessException;
	 public List<ProductRelease> getSSLVPNProductReleases() throws DataAccessException;
	 public String getGroupSecodes(String groupId) throws DataAccessException;
	 public List<SALGateway> getSALGateways(String soldToId, String salSEID, String salFlag) throws DataAccessException;
	 public List<String> getSPVersions(String productType, String template, String releaseNumber) throws DataAccessException;
	 public List<HardwareServer> getHardwareServersTemplate(String template) throws DataAccessException;
	 public List<String> getReleases(String seCode, String productType, String template, String specialNote, boolean sslvpn) throws DataAccessException;
	 public List<LocalTRConfig> getLocalTRConfig(TRConfig trConfig) throws DataAccessException;
	  public SiteRegistration getTechnicalRegistrationDetails(String registrationId, boolean isSuperUser) throws DataAccessException;
	  public TechnicalOrder getTechnicalOrderByOrderId(String technicalOrderId) throws DataAccessException;
	  public TechnicalRegistration getTechnicalRegistration(String technicalRegistrationId) throws DataAccessException;
	  public void updatePipelineTransactionsAlreadyTRedQty(PipelineSapTransactions pipelineTransaction) throws DataAccessException;
	  public boolean isSIDValidForSeCode(String sid) throws DataAccessException;
	  public List<String> getSeCodesForSid(String sid) throws DataAccessException;
	  public List<String> validateSIDAndFL(String SID) throws DataAccessException;
	  public List<String> validateSIDAndMID(String SID) throws DataAccessException;
	  public SiteList updateSiteListStatus(SiteList siteList, StatusEnum status) throws DataAccessException;
	  public TechnicalRegistration updateTechnicalRegistrationStatus(TechnicalRegistration technicalRegistration, StatusEnum status) throws DataAccessException ;
	  public TechnicalRegistration updateStepAResubmittedDate(TechnicalRegistration technicalRegistration) throws DataAccessException;
	  public ArtErrorCode getArtErrorCode(String errorCode) throws DataAccessException;
	  public List<ExpandedSolutionElement> getAssetsWithSameSIDandMID(String SID, String MID, String SEID) throws DataAccessException;
	  public List<ExpandedSolutionElement> getAssetsWithSameSIDandMIDandSEID(String SID, String MID, String SEID) throws DataAccessException;
	  public List<ExpandedSolutionElement> getSALGWDetails(String SEID) throws DataAccessException;
	  public void saveSalSiteList(SiteList siteList)throws DataAccessException;
	  public String saveSalSiteListOnly(SiteList siteList) throws DataAccessException;
	  public TechnicalRegistration updateTechnicalRegistrationStepBStatus(TechnicalRegistration technicalRegistration, StatusEnum status) throws DataAccessException;
	  public SiteList updateSiteListStepBStatus(SiteList siteList, StatusEnum status) throws DataAccessException;
	  public String getExistingRegistrationBySeid(String seId) throws DataAccessException;
	  public String checkEntitlementBySeid(String soldToId, String seId) throws DataAccessException;
	  public List<TechnicalRegistration> fetchExplictTechRegs(SiteRegistration siteRegistration, boolean isSuperUser, String accessType) throws DataAccessException;
	  public List<TechnicalRegistration> fetchRetestRecords(SiteRegistration siteRegistration, boolean isSuperUser) throws DataAccessException;
	  public TechnicalRegistration getConnectivityDetailsBySeid(String seid) throws Exception;
	  public int deleteTechOrderByRegId(String regId);
	  public int deleteTechRegByOrderIds( List<String> orderIds );
	  public CMMain validateCMMain(String cmMainSeid, List<String> piePollableSeCodes) throws DataAccessException;	  
	  public int saveSiteListWithExpElem(SiteList siteList);
	  public AUXMCMain validateAUXMCMainSEID(String auxMCMainSeid) throws DataAccessException;
}
